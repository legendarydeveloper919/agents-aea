name: 'tac_control'
author: fetchai
version: 0.1.0
license: Apache-2.0
aea_version: 0.2.3
fingerprint:
  __init__.py: Qme9YfgfPXymvupw1EHMJWGUSMTT6JQZxk2qaeKE76pgyN
  behaviours.py: QmSmYEgESyDMSemqdw2zkM2djAdLwoTsEfGk3Sr5Wb6X4h
  game.py: QmeELPf4HmFRKVsebN6Ew2b5FqXpbx71Eh8i6pQQP1AWxB
  handlers.py: QmSK3bNRe2jPbgtxTz94CGu6YLfaiFw6SJFNEAceQfmZbc
  helpers.py: QmSMkbDm2zeDoq9kqtw8eyXXyoaaw12vDZoZQm8nYsYZQa
  parameters.py: QmZFuam1iDkbsrND32wQz5vkcThp6SRSye54mofPQWdiNF
description: "The tac control skill implements the logic for an AEA to control an instance of the TAC."
behaviours:
  tac:
    class_name: TACBehaviour
    args: {}
handlers:
  tac:
    class_name: TACHandler
    args: {}
  oef:
    class_name: OEFRegistrationHandler
    args: {}
models:
  parameters:
    class_name: Parameters
    args:
      min_nb_agents: 2
      money_endowment: 2000000
      nb_goods: 10
      tx_fee: 1
      base_good_endowment: 2
      lower_bound_factor: 1
      upper_bound_factor: 1
      start_time: 12 11 2019  15:01
      registration_timeout: 60
      competition_timeout: 180
      inactivity_timeout: 60
      whitelist: []
      version_id: v1
  game:
    class_name: Game
    args: {}
protocols: ['fetchai/oef:0.1.0', 'fetchai/tac:0.1.0']
dependencies:
  numpy: {}
