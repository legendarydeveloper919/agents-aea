syntax = "proto3";

package fetch.aea.TwoPartyNegotiation;

message TwoPartyNegotiationMessage{

    // Performatives and contents
    message Cfp{
        string query = 1;
    }

    message Propose{
        int32 number = 1;
        float price = 2;
        string description = 3;
        bool flag = 4;
        string query = 5;
        map<string, string> proposal = 6;
        bool proposal_is_set = 7;
        repeated int32 rounds = 8;
        repeated string items = 9;
        string conditions_type_str = 10;
        map<string, int32> conditions_type_dict_of_str_int = 11;
        repeated string conditions_type_set_of_str = 12;
        map<string, float> conditions_type_dict_of_str_float = 13;
        bool conditions_is_set = 14;
    }

    message Request{
        string method = 1;
        string url = 2;
        string version = 3;
        string headers = 4;
        bytes bodyy = 5;
        bool bodyy_is_set = 6;
    }

    message Accept{}

    message Inform{
        repeated int32 inform_number = 1;
    }

    message Inform_Reply{
        map<int32, string> reply_message = 1;
    }

    message Decline{}

    message Match_Accept{}


    // Standard TwoPartyNegotiationMessage fields
    int32 message_id = 1;
    string dialogue_starter_reference = 2;
    string dialogue_responder_reference = 3;
    int32 target = 4;
    oneof performative{
        Accept accept = 5;
        Cfp cfp = 6;
        Decline decline = 7;
        Inform inform = 8;
        Inform_Reply inform_reply = 9;
        Match_Accept match_accept = 10;
        Propose propose = 11;
        Request request = 12;
    }
}
