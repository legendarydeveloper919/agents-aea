name: AEA framework sanity checks and tests

on:
  push:
    branches:
      - develop
      - master
  pull_request:

jobs:
  common_checks:
     runs-on: ubuntu-latest

     timeout-minutes: 30

     steps:
       - uses: actions/checkout@master
       - uses: actions/setup-python@master
         with:
           python-version: 3.6
       - name: Install dependencies (ubuntu-latest)
         run: |
           sudo apt-get update --fix-missing
           sudo apt-get autoremove
           sudo apt-get autoclean
           pip install pipenv
           pip install tox
           # install IPFS
           sudo apt-get install -y wget
           wget -O ./go-ipfs.tar.gz https://dist.ipfs.io/go-ipfs/v0.4.23/go-ipfs_v0.4.23_linux-amd64.tar.gz
           tar xvfz go-ipfs.tar.gz
           sudo mv go-ipfs/ipfs /usr/local/bin/ipfs
           ipfs init
       - name: Security Check - Main
         run: tox -e bandit-main
       - name: Security Check - Tests
         run: tox -e bandit-tests
       - name: Safety Check
         run: tox -e safety
       - name: License Check
         run: tox -e liccheck
       - name: Copyright Check
         run: tox -e copyright_check
       - name: AEA Package Hashes Check
         run: tox -e hash_check -- --timeout 20.0
       - name: Code style check
         run: |
           tox -e black-check
           tox -e flake8
       - name: Static type check
         run: tox -e mypy
       - name: Generate Documentation
         run: tox -e docs

  platform_checks:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]

    timeout-minutes: 30

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}
    - if: matrix.os == 'ubuntu-latest'
      name: Install dependencies (ubuntu-latest)
      run: |
        sudo apt-get update --fix-missing
        sudo apt-get autoremove
        sudo apt-get autoclean
        pip install pipenv
        pip install tox
        sudo apt-get install -y protobuf-compiler
    # use sudo rm /var/lib/apt/lists/lock above in line above update if dependency install failures persist
    # use sudo apt-get dist-upgrade above in line below update if dependency install failures persist
    - if: matrix.os == 'macos-latest'
      name: Install dependencies (macos-latest)
      run: |
        pip install pipenv
        pip install tox
        brew install protobuf
    - name: Unit tests and coverage
      run: |
        tox -e py${{ matrix.python-version }}
    # optionally, use flags beyond above command: -- --no-integration-tests --ci
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        yml: ./codecov.yml
        fail_ci_if_error: true
